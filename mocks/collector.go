// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Collector is an autogenerated mock type for the Collector type
type Collector struct {
	mock.Mock
}

// Collect provides a mock function with given fields: eventName, properties
func (_m *Collector) Collect(eventName string, properties map[string]interface{}) error {
	ret := _m.Called(eventName, properties)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, map[string]interface{}) error); ok {
		r0 = rf(eventName, properties)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCollector interface {
	mock.TestingT
	Cleanup(func())
}

// NewCollector creates a new instance of Collector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCollector(t mockConstructorTestingTNewCollector) *Collector {
	mock := &Collector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
